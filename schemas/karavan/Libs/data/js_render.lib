{"script":true,"acl":"*","sandbox":"{\n  App: App,\n  require: require,\n  console: console\n}","src":"return function(render) {\n  \n  // Получить список всех библиотек\n  App.Libs.Box.list((err, list) => {\n    if (err) {return render(null, '/* Empty list */');}\n    \n    // Для каждой библиотеки\n    var arr_fn = [];\n    for (var key in list) {\n      \n      var ok = false;\n      if (key.substr(0, 7) === 'launch.') {\n        ok = true;  \n      }\n      \n      console.log('key test', key, config.page, key != config.page);\n      \n      \n      if (key != config.page) {\n          arr_fn.push((function(name){ return function (cb) {\n            \n            \n            App.Libs.content(config.ssid, name, {ssid: config.ssid, name: name}, {}, (err, data) => {\n                if (err) {return cb(null, {name: name, content: ''});}\n    \t\t\treturn cb(null, {name: name, content: data});\n    \t\t});\n            \n            \n          };})(key));\n      }\n      \n      \n      //content += ''+key+' ('+ok+')\\n';\n    }\n    console.log('key222', arr_fn);\n    \n    \n    var async = require('async');\n    async.parallel(arr_fn, (err, data) => {\n        var content = '';\n        data.forEach((item)=>{\n          content += '/* Lib: '+item.name+' */\\n'+item.content+'\\n\\n';\n        });\n        //console.log('Async Result', err, data, content);\n        render(null, content);\n    });\n    \n\n  });  \n}\n\n\n/*\n\n\n\n\n\nconsole.log('config', config);\nreturn 'ok';\n\n\n\t\tserver.get(base_url+'lib/:content', function(req, res) {\n      App.Libs.content(req.ssid, req.params.content, {ssid: req.ssid, dir: dir_private, page: req.params.content}, {}, function(err, data){\n        if (err) {return res.end();}\n\t\t\t\t\tres.end(data);\n\t\t\t});\n\t\t});\t\n\n/*function GetContent(cb) {\n    var content = '';\n    var list = App.Libs.Box.list();\n    for (var key in list) {\n      console.log('key', key);\n      content += ''+key+'\\n';\n    }\n    console.log('config', config);\n    //return cb(null, content);\n    \n    /*\n    err, data) => {\n      \n      if (err){cb(null, '');}\n      \n      var async   = require('async');\n      async.map(data, App.Libs.Box.get, function(err, results){\n        if (err){cb(null, '');}\n        \n        for (var key in results) {\n            console.log('results[key]', results[key]);\n            content += ''+results[key]+'\\n';\n        }\n        \n        cb(null, content);\n        \n      });\n    });\n    */\n    \n//}\n\n//return GetContent;\n\n\n/*\n\nfunction GetContent(cb) {\n    \nvar content = '';\n\nApp.Libs.Box.list((err, data) => {\n  if (err){cb(null, '');}\n  \n  for (var key in list) {\n    var lib = App.Libs.Box.get(key);\n    \n  }\n});\n\nfunction cb_lib(err, data) {\n  if (err){return cb(null, 'null');}\n} \n\n  \n\n  var str = '';\n\n  App.Libs.Box.list((err, list) => {\n    if (err){return cb(null, 'null');}\n  \n  \n  \n  \n  \n    for (var key in list) {\n      str += ', '+key;\n    }\n    cb(null, str);  \n  });\n\n\nreturn GetContent;\n\nreturn function(callback){\n  \n  App.Libs.Box.list();\n  console.log('123456789', name);\n  callback(null, 'return '+name);\n};\n*/"}