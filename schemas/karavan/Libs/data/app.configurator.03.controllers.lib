{"enable":true,"script":false,"acl":"#","sandbox":"{}","src":"appDIS\n    // =========================================================================\n    // Base controller for common functions\n    // =========================================================================\n    \n    .controller('AppCtrl', function($timeout, $state, $scope, $rootScope, $document, growlService, Idle, User, WatchDog){\n        \n        var me = this;\n        \n        \n        /* Уведомления состояния соединения */\n        var skin = {\n          connect:    'bluegray',\n          disconnect: 'red',\n          error:      'black'\n        }\n        $rootScope.$on('User.status',     function(event, args){$scope.connect = args.connected;});\n        $rootScope.$on('User.connect',    function(event, args){me.currentSkin = skin.connect;});\n        $rootScope.$on('User.error',      function(event, args){me.currentSkin = skin.error;});\n        $rootScope.$on('User.disconnect', function(event, args){me.currentSkin = skin.disconnect;});\n\n        \n        $rootScope.$on('Idle',            function(event, args){\n            if (args) {\n              swal('Простой', 'Включен режим энергосбережения', 'info');\n            }\n        });\n        \n        Idle.look($document);\n        \n    \n        // Detact Mobile Browser\n        if( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {\n           angular.element('html').addClass('ismobile');\n        }\n\n        // By default Sidbars are hidden in boxed layout and in wide layout only the right sidebar is hidden.\n        me.sidebarToggle = {\n            left: false,\n            right: false\n        }\n\n        // By default template has a boxed layout\n        me.layoutType = localStorage.getItem('ma-layout-status');\n        \n        // For Mainmenu Active Class\n        me.$state = $state;    \n        \n        //Close sidebar on click\n        me.sidebarStat = function(event) {\n            if (!angular.element(event.target).parent().hasClass('active')) {\n                me.sidebarToggle.left = false;\n            }\n        }\n        \n        //Listview Search (Check listview pages)\n        me.listviewSearchStat = false;\n        \n        me.lvSearch = function() {\n            me.listviewSearchStat = true; \n        }\n        \n        //Listview menu toggle in small screens\n        me.lvMenuStat = false;\n        \n        //Blog\n        me.wallCommenting = [];\n        \n        me.wallImage = false;\n        me.wallVideo = false;\n        me.wallLink  = false;\n\n        //Skin Switch\n        me.currentSkin = skin.connect;\n\n        me.skinList = [\n          'white',\n          'black',\n          'brown',\n          'pink',\n          'red',    \n          'orange',\n          'deeporange',       \n          'yellow',     \n          'green',\n          'lightgreen',\n          'lime',     \n          'lightblue',\n          'blue',\n          'purple',\n          'deeppurple',\n          'cyan',\n          'teal',\n          'amber',\n          'gray',\n          'bluegray',\n          'indigo'\n        ]\n\n        me.skinSwitch = function (color) {\n            me.currentSkin = color;\n        }\n    \n    })\n\n\n    // =========================================================================\n    // Header\n    // =========================================================================\n    .controller('headerCtrl', function($timeout, messageService){\n\n\n        // Top Search\n        this.openSearch = function(){\n            angular.element('#header').addClass('search-toggled');\n            angular.element('#top-search-wrap').find('input').focus();\n        }\n\n        this.closeSearch = function(){\n            angular.element('#header').removeClass('search-toggled');\n        }\n        \n        // Get messages and notification for header\n        this.img = messageService.img;\n        this.user = messageService.user;\n        this.user = messageService.text;\n\n        this.messageResult = messageService.getMessage(this.img, this.user, this.text);\n\n\n        //Clear Notification\n        this.clearNotification = function($event) {\n            $event.preventDefault();\n            \n            var x = angular.element($event.target).closest('.listview');\n            var y = x.find('.lv-item');\n            var z = y.size();\n            \n            angular.element($event.target).parent().fadeOut();\n            \n            x.find('.list-group').prepend('<i class=\"grid-loading hide-it\"></i>');\n            x.find('.grid-loading').fadeIn(1500);\n            var w = 0;\n            \n            y.each(function(){\n                var z = $(this);\n                $timeout(function(){\n                    z.addClass('animated fadeOutRightBig').delay(1000).queue(function(){\n                        z.remove();\n                    });\n                }, w+=150);\n            })\n            \n            $timeout(function(){\n                angular.element('#notifications').addClass('empty');\n            }, (z*150)+200);\n        }\n        \n        // Clear Local Storage\n        this.clearLocalStorage = function() {\n            \n            //Get confirmation, if confirmed clear the localStorage\n            swal({   \n                title: \"Are you sure?\",   \n                text: \"All your saved localStorage values will be removed\",   \n                type: \"warning\",   \n                showCancelButton: true,   \n                confirmButtonColor: \"#F44336\",   \n                confirmButtonText: \"Yes, delete it!\",   \n                closeOnConfirm: false \n            }, function(){\n                localStorage.clear();\n                swal(\"Done!\", \"localStorage is cleared\", \"success\"); \n            });\n            \n        }\n        \n        //Fullscreen View\n        this.fullScreen = function() {\n            //Launch\n            function launchIntoFullscreen(element) {\n                if(element.requestFullscreen) {\n                    element.requestFullscreen();\n                } else if(element.mozRequestFullScreen) {\n                    element.mozRequestFullScreen();\n                } else if(element.webkitRequestFullscreen) {\n                    element.webkitRequestFullscreen();\n                } else if(element.msRequestFullscreen) {\n                    element.msRequestFullscreen();\n                }\n            }\n\n            //Exit\n            function exitFullscreen() {\n                if(document.exitFullscreen) {\n                    document.exitFullscreen();\n                } else if(document.mozCancelFullScreen) {\n                    document.mozCancelFullScreen();\n                } else if(document.webkitExitFullscreen) {\n                    document.webkitExitFullscreen();\n                }\n            }\n\n            if (exitFullscreen()) {\n                launchIntoFullscreen(document.documentElement);\n            }\n            else {\n                launchIntoFullscreen(document.documentElement);\n            }\n        }\n    \n    })\n\n\n\n    // =========================================================================\n    // Best Selling Widget\n    // =========================================================================\n\n    .controller('bestsellingCtrl', function(bestsellingService){\n        // Get Best Selling widget Data\n        this.img = bestsellingService.img;\n        this.name = bestsellingService.name;\n        this.range = bestsellingService.range; \n        \n        this.bsResult = bestsellingService.getBestselling(this.img, this.name, this.range);\n    })\n\n \n    // =========================================================================\n    // Todo List Widget\n    // =========================================================================\n\n    .controller('todoCtrl', function(todoService){\n        \n        //Get Todo List Widget Data\n        this.todo = todoService.todo;\n        \n        this.tdResult = todoService.getTodo(this.todo);\n        \n        //Add new Item (closed by default)\n        this.addTodoStat = false;\n    })\n\n\n    // =========================================================================\n    // Recent Items Widget\n    // =========================================================================\n\n    .controller('recentitemCtrl', function(recentitemService){\n        \n        //Get Recent Items Widget Data\n        this.id = recentitemService.id;\n        this.name = recentitemService.name;\n        this.parseInt = recentitemService.price;\n        \n        this.riResult = recentitemService.getRecentitem(this.id, this.name, this.price);\n    })\n\n\n    // =========================================================================\n    // Recent Posts Widget\n    // =========================================================================\n    \n    .controller('recentpostCtrl', function(recentpostService){\n        \n        //Get Recent Posts Widget Items\n        this.img = recentpostService.img;\n        this.user = recentpostService.user;\n        this.text = recentpostService.text;\n        \n        this.rpResult = recentpostService.getRecentpost(this.img, this.user, this.text);\n    })\n\n\n    //=================================================\n    // Profile\n    //=================================================\n\n    .controller('profileCtrl', function(growlService){\n        \n        //Get Profile Information from profileService Service\n        \n        //User\n        this.profileSummary = \"Sed eu est vulputate, fringilla ligula ac, maximus arcu. Donec sed felis vel magna mattis ornare ut non turpis. Sed id arcu elit. Sed nec sagittis tortor. Mauris ante urna, ornare sit amet mollis eu, aliquet ac ligula. Nullam dolor metus, suscipit ac imperdiet nec, consectetur sed ex. Sed cursus porttitor leo.\";\n    \n        this.fullName = \"Mallinda Hollaway\";\n        this.gender = \"female\";\n        this.birthDay = \"23/06/1988\";\n        this.martialStatus = \"Single\";\n        this.mobileNumber = \"00971123456789\";\n        this.emailAddress = \"malinda.h@gmail.com\";\n        this.twitter = \"@malinda\";\n        this.twitterUrl = \"twitter.com/malinda\";\n        this.skype = \"malinda.hollaway\";\n        this.addressSuite = \"44-46 Morningside Road\";\n        this.addressCity = \"Edinburgh\";\n        this.addressCountry = \"Scotland\";\n\n        //Edit\n        this.editSummary = 0;\n        this.editInfo = 0;\n        this.editContact = 0;\n    \n        growlService.growl('Welcome back '+this.fullName+'!', 'inverse');\n        \n        this.submit = function(item, message) {            \n            if(item === 'profileSummary') {\n                this.editSummary = 0;\n            }\n            \n            if(item === 'profileInfo') {\n                this.editInfo = 0;\n            }\n            \n            if(item === 'profileContact') {\n                this.editContact = 0;\n            }\n            \n            growlService.growl(message+' has updated Successfully!', 'inverse'); \n        }\n\n    })\n\n\n\n    //=================================================\n    // LOGIN\n    //=================================================\n\n    .controller('loginCtrl', function(){\n        \n        //Status\n    \n        this.login = 1;\n        this.register = 0;\n        this.forgot = 0;\n    })\n\n\n    //=================================================\n    // CALENDAR\n    //=================================================\n    \n    .controller('calendarCtrl', function($modal){\n    \n        //Create and add Action button with dropdown in Calendar header. \n        this.month = 'month';\n    \n        this.actionMenu = '<ul class=\"actions actions-alt\" id=\"fc-actions\">' +\n                            '<li class=\"dropdown\" dropdown>' +\n                                '<a href=\"\" dropdown-toggle><i class=\"zmdi zmdi-more-vert\"></i></a>' +\n                                '<ul class=\"dropdown-menu dropdown-menu-right\">' +\n                                    '<li class=\"active\">' +\n                                        '<a data-calendar-view=\"month\" href=\"\">Month View</a>' +\n                                    '</li>' +\n                                    '<li>' +\n                                        '<a data-calendar-view=\"basicWeek\" href=\"\">Week View</a>' +\n                                    '</li>' +\n                                    '<li>' +\n                                        '<a data-calendar-view=\"agendaWeek\" href=\"\">Agenda Week View</a>' +\n                                    '</li>' +\n                                    '<li>' +\n                                        '<a data-calendar-view=\"basicDay\" href=\"\">Day View</a>' +\n                                    '</li>' +\n                                    '<li>' +\n                                        '<a data-calendar-view=\"agendaDay\" href=\"\">Agenda Day View</a>' +\n                                    '</li>' +\n                                '</ul>' +\n                            '</div>' +\n                        '</li>';\n\n            \n        //Open new event modal on selecting a day\n        this.onSelect = function(argStart, argEnd) {            \n            var modalInstance  = $modal.open({\n                templateUrl: 'addEvent.html',\n                controller: 'addeventCtrl',\n                backdrop: 'static',\n                keyboard: false,\n                resolve: {\n                    calendarData: function() {\n                        var x = [argStart, argEnd];\n                        return x;\n                    }\n                }\n            });\n        }\n    })\n\n    //Add event Controller (Modal Instance)\n    .controller('addeventCtrl', function($scope, $modalInstance, calendarData){\n        \n        //Calendar Event Data\n        $scope.calendarData = {\n            eventStartDate: calendarData[0],\n            eventEndDate:  calendarData[1]\n        };\n    \n        //Tags\n        $scope.tags = [\n            'bgm-teal',\n            'bgm-red',\n            'bgm-pink',\n            'bgm-blue',\n            'bgm-lime',\n            'bgm-green',\n            'bgm-cyan',\n            'bgm-orange',\n            'bgm-purple',\n            'bgm-gray',\n            'bgm-black',\n        ]\n        \n        //Select Tag\n        $scope.currentTag = '';\n        \n        $scope.onTagClick = function(tag, $index) {\n            $scope.activeState = $index;\n            $scope.activeTagColor = tag;\n        } \n        \n        //Add new event\n        $scope.addEvent = function() {\n            if ($scope.calendarData.eventName) {\n\n                //Render Event\n                $('#calendar').fullCalendar('renderEvent',{\n                    title: $scope.calendarData.eventName,\n                    start: $scope.calendarData.eventStartDate,\n                    end:  $scope.calendarData.eventEndDate,\n                    allDay: true,\n                    className: $scope.activeTagColor\n\n                },true ); //Stick the event\n\n                $scope.activeState = -1;\n                $scope.calendarData.eventName = '';     \n                $modalInstance.close();\n            }\n        }\n        \n        //Dismiss \n        $scope.eventDismiss = function() {\n            $modalInstance.dismiss();\n        }\n    })\n\n    // =========================================================================\n    // COMMON FORMS\n    // =========================================================================\n\n    .controller('formCtrl', function(){\n    \n        //Input Slider\n        this.nouisliderValue = 4;\n        this.nouisliderFrom = 25;\n        this.nouisliderTo = 80;\n        this.nouisliderRed = 35;\n        this.nouisliderBlue = 90;\n        this.nouisliderCyan = 20;\n        this.nouisliderAmber = 60;\n        this.nouisliderGreen = 75;\n    \n        //Color Picker\n        this.color = '#03A9F4';\n        this.color2 = '#8BC34A';\n        this.color3 = '#F44336';\n        this.color4 = '#FFC107';\n    })\n\n\n    // =========================================================================\n    // PHOTO GALLERY\n    // =========================================================================\n\n    .controller('photoCtrl', function(){\n        \n        //Default grid size (2)\n        this.photoColumn = 'col-md-2';\n        this.photoColumnSize = 2;\n    \n        this.photoOptions = [\n            { value: 2, column: 6 },\n            { value: 3, column: 4 },\n            { value: 4, column: 3 },\n            { value: 1, column: 12 },\n        ]\n    \n        //Change grid\n        this.photoGrid = function(size) {\n            this.photoColumn = 'col-md-'+size;\n            this.photoColumnSize = size;\n        }\n    \n    })\n\n\n    // =========================================================================\n    // ANIMATIONS DEMO\n    // =========================================================================\n    .controller('animCtrl', function($timeout){\n        \n        //Animation List\n        this.attentionSeekers = [\n            { animation: 'bounce', target: 'attentionSeeker' },\n            { animation: 'flash', target: 'attentionSeeker' },\n            { animation: 'pulse', target: 'attentionSeeker' },\n            { animation: 'rubberBand', target: 'attentionSeeker' },\n            { animation: 'shake', target: 'attentionSeeker' },\n            { animation: 'swing', target: 'attentionSeeker' },\n            { animation: 'tada', target: 'attentionSeeker' },\n            { animation: 'wobble', target: 'attentionSeeker' }\n        ]\n        this.flippers = [\n            { animation: 'flip', target: 'flippers' },\n            { animation: 'flipInX', target: 'flippers' },\n            { animation: 'flipInY', target: 'flippers' },\n            { animation: 'flipOutX', target: 'flippers' },\n            { animation: 'flipOutY', target: 'flippers'  }\n        ]\n         this.lightSpeed = [\n            { animation: 'lightSpeedIn', target: 'lightSpeed' },\n            { animation: 'lightSpeedOut', target: 'lightSpeed' }\n        ]\n        this.special = [\n            { animation: 'hinge', target: 'special' },\n            { animation: 'rollIn', target: 'special' },\n            { animation: 'rollOut', target: 'special' }\n        ]\n        this.bouncingEntrance = [\n            { animation: 'bounceIn', target: 'bouncingEntrance' },\n            { animation: 'bounceInDown', target: 'bouncingEntrance' },\n            { animation: 'bounceInLeft', target: 'bouncingEntrance' },\n            { animation: 'bounceInRight', target: 'bouncingEntrance' },\n            { animation: 'bounceInUp', target: 'bouncingEntrance'  }\n        ]\n        this.bouncingExits = [\n            { animation: 'bounceOut', target: 'bouncingExits' },\n            { animation: 'bounceOutDown', target: 'bouncingExits' },\n            { animation: 'bounceOutLeft', target: 'bouncingExits' },\n            { animation: 'bounceOutRight', target: 'bouncingExits' },\n            { animation: 'bounceOutUp', target: 'bouncingExits'  }\n        ]\n        this.rotatingEntrances = [\n            { animation: 'rotateIn', target: 'rotatingEntrances' },\n            { animation: 'rotateInDownLeft', target: 'rotatingEntrances' },\n            { animation: 'rotateInDownRight', target: 'rotatingEntrances' },\n            { animation: 'rotateInUpLeft', target: 'rotatingEntrances' },\n            { animation: 'rotateInUpRight', target: 'rotatingEntrances'  }\n        ]\n        this.rotatingExits = [\n            { animation: 'rotateOut', target: 'rotatingExits' },\n            { animation: 'rotateOutDownLeft', target: 'rotatingExits' },\n            { animation: 'rotateOutDownRight', target: 'rotatingExits' },\n            { animation: 'rotateOutUpLeft', target: 'rotatingExits' },\n            { animation: 'rotateOutUpRight', target: 'rotatingExits'  }\n        ]\n        this.fadeingEntrances = [\n            { animation: 'fadeIn', target: 'fadeingEntrances' },\n            { animation: 'fadeInDown', target: 'fadeingEntrances' },\n            { animation: 'fadeInDownBig', target: 'fadeingEntrances' },\n            { animation: 'fadeInLeft', target: 'fadeingEntrances' },\n            { animation: 'fadeInLeftBig', target: 'fadeingEntrances'  },\n            { animation: 'fadeInRight', target: 'fadeingEntrances'  },\n            { animation: 'fadeInRightBig', target: 'fadeingEntrances'  },\n            { animation: 'fadeInUp', target: 'fadeingEntrances'  },\n            { animation: 'fadeInBig', target: 'fadeingEntrances'  }\n        ]\n        this.fadeingExits = [\n            { animation: 'fadeOut', target: 'fadeingExits' },\n            { animation: 'fadeOutDown', target: 'fadeingExits' },\n            { animation: 'fadeOutDownBig', target: 'fadeingExits' },\n            { animation: 'fadeOutLeft', target: 'fadeingExits' },\n            { animation: 'fadeOutLeftBig', target: 'fadeingExits'  },\n            { animation: 'fadeOutRight', target: 'fadeingExits'  },\n            { animation: 'fadeOutRightBig', target: 'fadeingExits'  },\n            { animation: 'fadeOutUp', target: 'fadeingExits'  },\n            { animation: 'fadeOutUpBig', target: 'fadeingExits'  }\n        ]\n        this.zoomEntrances = [\n            { animation: 'zoomIn', target: 'zoomEntrances' },\n            { animation: 'zoomInDown', target: 'zoomEntrances' },\n            { animation: 'zoomInLeft', target: 'zoomEntrances' },\n            { animation: 'zoomInRight', target: 'zoomEntrances' },\n            { animation: 'zoomInUp', target: 'zoomEntrances'  }\n        ]\n        this.zoomExits = [\n            { animation: 'zoomOut', target: 'zoomExits' },\n            { animation: 'zoomOutDown', target: 'zoomExits' },\n            { animation: 'zoomOutLeft', target: 'zoomExits' },\n            { animation: 'zoomOutRight', target: 'zoomExits' },\n            { animation: 'zoomOutUp', target: 'zoomExits'  }\n        ]\n\n        //Animate    \n        this.ca = '';\n    \n        this.setAnimation = function(animation, target) {\n            if (animation === \"hinge\") {\n                animationDuration = 2100;\n            }\n            else {\n                animationDuration = 1200;\n            }\n            \n            angular.element('#'+target).addClass(animation);\n            \n            $timeout(function(){\n                angular.element('#'+target).removeClass(animation);\n            }, animationDuration);\n        }\n    \n    })\n\n"}